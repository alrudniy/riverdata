{"ast":null,"code":"export default function getChildRouter(router, routeName) {\n  var _router$childRouters;\n  if ((_router$childRouters = router.childRouters) === null || _router$childRouters === void 0 ? void 0 : _router$childRouters[routeName]) {\n    return router.childRouters[routeName];\n  }\n  var Component = router.getComponentForRouteName(routeName);\n  return Component.router;\n}","map":{"version":3,"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,MAAxB,EAAqCC,SAArC,EAAwD;EAAA;EACrE,4BAAID,MAAM,CAACE,YAAX,yDAAIC,qBAAsBF,SAAtB,CAAJ,EAAsC;IACpC,OAAOD,MAAM,CAACE,YAAP,CAAoBD,SAApB,CAAP;EACD;EAED,IAAMG,SAAS,GAAGJ,MAAM,CAACK,wBAAP,CAAgCJ,SAAhC,CAAlB;EAEA,OAAOG,SAAS,CAACJ,MAAjB;AACD","names":["getChildRouter","router","routeName","childRouters","_router$childRouters","Component","getComponentForRouteName"],"sources":["getChildRouter.ts"],"sourcesContent":["export default function getChildRouter(router: any, routeName: string) {\n  if (router.childRouters?.[routeName]) {\n    return router.childRouters[routeName];\n  }\n\n  const Component = router.getComponentForRouteName(routeName);\n\n  return Component.router;\n}\n"]},"metadata":{},"sourceType":"module"}