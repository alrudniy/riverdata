{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationActions } from \"react-navigation\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Item from \"./Item\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RDStateSitesScreen = function RDStateSitesScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState({\n      value: {\n        timeSeries: []\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    err = _useState4[0],\n    setErr = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sites = _useState6[0],\n    setSites = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var stateId = route.params.stateId;\n  var handleClick = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield fetch(\"https://waterservices.usgs.gov/nwis/iv?format=json&stateCd=\" + stateId, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Error! status: ' + response.status);\n        }\n        var result = yield response.json();\n        setData(result);\n      } catch (err) {\n        setErr(err.message);\n      }\n      setLoading(false);\n    });\n    return function handleClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var processData = function processData() {\n    var arr = [];\n    data.value.timeSeries.map(function (site) {\n      if (arr.some(function (val) {\n        return val[\"siteName\"] == site.sourceInfo.siteName;\n      })) {\n        arr.forEach(function (k) {\n          if (k[\"siteName\"] === site.sourceInfo.siteName) {\n            k[\"gauges\"]++;\n          }\n        });\n      } else {\n        var a = {};\n        a[\"siteName\"] = site.sourceInfo.siteName;\n        a[\"siteValue\"] = site.sourceInfo.siteCode[0].value;\n        a[\"gauges\"] = 1;\n        arr.push(a);\n      }\n    });\n    arr.sort(function (a, b) {\n      return a.siteName.localeCompare(b.siteName);\n    });\n    setSites(arr);\n  };\n  useEffect(function () {\n    handleClick();\n  }, []);\n  useEffect(function () {\n    processData();\n  }, [data]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [err && _jsx(Text, {\n      style: styles.error,\n      children: err\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#000\",\n      style: styles.loading\n    }) : _jsx(FlatList, {\n      data: sites,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(View, {\n          style: styles.item,\n          children: _jsx(Item, {\n            label: item.siteName,\n            description: _jsx(Text, {\n              style: styles.gauges,\n              children: item.gauges + \" gauges\"\n            }),\n            onPress: function onPress() {\n              navigation.navigate('Site Gauges', {\n                gaugeId: item.siteValue\n              });\n            }\n          }, item.siteName + \"_\" + item.siteValue)\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.siteName + \"_\" + item.siteValue;\n      },\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(View, {\n          style: styles.separator\n        });\n      }\n    }), _jsx(StatusBar, {\n      barStyle: \"light-content\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingVertical: 20,\n    paddingHorizontal: 10\n  },\n  error: {\n    color: '#f00',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  item: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: '#f8f8f8',\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  siteName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  gauges: {\n    fontStyle: 'italic'\n  }\n});\nexport default RDStateSitesScreen;","map":{"version":3,"names":["React","useEffect","useState","NavigationActions","NavigationContainer","createNativeStackNavigator","Item","RDStateSitesScreen","route","navigation","value","timeSeries","data","setData","err","setErr","sites","setSites","loading","setLoading","stateId","params","handleClick","response","fetch","method","headers","Accept","ok","Error","status","result","json","message","processData","arr","map","site","some","val","sourceInfo","siteName","forEach","k","a","siteCode","push","sort","b","localeCompare","styles","container","error","item","gauges","navigate","gaugeId","siteValue","separator","StyleSheet","create","flex","backgroundColor","paddingVertical","paddingHorizontal","color","fontSize","fontWeight","textAlign","marginTop","borderRadius","marginBottom","fontStyle"],"sources":["C:/Users/subte/RD2/riverdata/riverdata/components/RDStateSites.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, Button, View, Text, FlatList, StatusBar, StyleSheet } from 'react-native';\r\nimport { NavigationActions } from \"react-navigation\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Item from './Item';\r\n\r\nconst RDStateSitesScreen = ({ route, navigation }) => {\r\n  const [data, setData] = useState({ value: { timeSeries: [] } });\r\n  const [err, setErr] = useState('');\r\n  const [sites, setSites] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { stateId } = route.params;\r\n\r\n  const handleClick = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`https://waterservices.usgs.gov/nwis/iv?format=json&stateCd=${stateId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Accept: 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error! status: ' + response.status);\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      setData(result);\r\n    } catch (err) {\r\n      setErr(err.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const processData = () => {\r\n    let arr = [];\r\n    data.value.timeSeries.map(site => {\r\n      if (arr.some((val) => { return val[\"siteName\"] == site.sourceInfo.siteName })) {\r\n        arr.forEach((k) => {\r\n          if (k[\"siteName\"] === site.sourceInfo.siteName) {\r\n            k[\"gauges\"]++\r\n          }\r\n        })\r\n      } else {\r\n        let a = {};\r\n        a[\"siteName\"] = site.sourceInfo.siteName\r\n        a[\"siteValue\"] = site.sourceInfo.siteCode[0].value\r\n        a[\"gauges\"] = 1\r\n        arr.push(a);\r\n      }\r\n    });\r\n    // Sort sites in alphabetical order by siteName\r\n    arr.sort((a, b) => a.siteName.localeCompare(b.siteName));\r\n    setSites(arr);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleClick();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    processData();\r\n  }, [data]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {err && <Text style={styles.error}>{err}</Text>}\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#000\" style={styles.loading} />\r\n      ) : (\r\n        <FlatList\r\n          data={sites}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.item}>\r\n              <Item\r\n                key={`${item.siteName}_${item.siteValue}`}\r\n                label={item.siteName}\r\n                description={<Text style={styles.gauges}>{`${item.gauges} gauges`}</Text>}\r\n                onPress={() => {\r\n                  navigation.navigate('Site Gauges', { gaugeId: item.siteValue })\r\n                }}\r\n              />\r\n            </View>\r\n          )}\r\n          keyExtractor={(item) => `${item.siteName}_${item.siteValue}`}\r\n          ItemSeparatorComponent={() => <View style={styles.separator} />}\r\n        />\r\n      )}\r\n      <StatusBar barStyle=\"light-content\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 10,\r\n  },\r\n  error: {\r\n    color: '#f00',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n  item: {\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    backgroundColor: '#f8f8f8',\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n  siteName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  gauges: {\r\n    fontStyle: 'italic',\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default RDStateSitesScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}