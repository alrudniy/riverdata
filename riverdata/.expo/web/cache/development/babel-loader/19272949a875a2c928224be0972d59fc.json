{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { getHeaderTitle, Header, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport BottomTabBarHeightContext from \"../utils/BottomTabBarHeightContext\";\nimport BottomTabBar, { getTabBarHeight } from \"./BottomTabBar\";\nimport { MaybeScreen, MaybeScreenContainer } from \"./ScreenFallback\";\nexport default function BottomTabView(props) {\n  var _props$tabBar = props.tabBar,\n    tabBar = _props$tabBar === void 0 ? function (props) {\n      return React.createElement(BottomTabBar, props);\n    } : _props$tabBar,\n    state = props.state,\n    navigation = props.navigation,\n    descriptors = props.descriptors,\n    safeAreaInsets = props.safeAreaInsets,\n    _props$detachInactive = props.detachInactiveScreens,\n    detachInactiveScreens = _props$detachInactive === void 0 ? Platform.OS === 'web' || Platform.OS === 'android' || Platform.OS === 'ios' : _props$detachInactive,\n    sceneContainerStyle = props.sceneContainerStyle;\n  var focusedRouteKey = state.routes[state.index].key;\n  var _React$useState = React.useState([focusedRouteKey]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loaded = _React$useState2[0],\n    setLoaded = _React$useState2[1];\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([].concat(_toConsumableArray(loaded), [focusedRouteKey]));\n  }\n  var dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  var _React$useState3 = React.useState(function () {\n      return getTabBarHeight({\n        state: state,\n        descriptors: descriptors,\n        dimensions: dimensions,\n        layout: {\n          width: dimensions.width,\n          height: 0\n        },\n        insets: _objectSpread(_objectSpread({}, SafeAreaProviderCompat.initialMetrics.insets), props.safeAreaInsets),\n        style: descriptors[state.routes[state.index].key].options.tabBarStyle\n      });\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    tabBarHeight = _React$useState4[0],\n    setTabBarHeight = _React$useState4[1];\n  var renderTabBar = function renderTabBar() {\n    return React.createElement(SafeAreaInsetsContext.Consumer, null, function (insets) {\n      var _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n      return tabBar({\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation,\n        insets: {\n          top: (_ref2 = (_ref3 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) != null ? _ref3 : insets === null || insets === void 0 ? void 0 : insets.top) != null ? _ref2 : 0,\n          right: (_ref4 = (_ref5 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) != null ? _ref5 : insets === null || insets === void 0 ? void 0 : insets.right) != null ? _ref4 : 0,\n          bottom: (_ref6 = (_ref7 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) != null ? _ref7 : insets === null || insets === void 0 ? void 0 : insets.bottom) != null ? _ref6 : 0,\n          left: (_ref8 = (_ref9 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) != null ? _ref9 : insets === null || insets === void 0 ? void 0 : insets.left) != null ? _ref8 : 0\n        }\n      });\n    });\n  };\n  var routes = state.routes;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(MaybeScreenContainer, {\n    enabled: detachInactiveScreens,\n    hasTwoStates: true,\n    style: styles.container\n  }, routes.map(function (route, index) {\n    var descriptor = descriptors[route.key];\n    var _descriptor$options = descriptor.options,\n      _descriptor$options$l = _descriptor$options.lazy,\n      lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,\n      unmountOnBlur = _descriptor$options.unmountOnBlur;\n    var isFocused = state.index === index;\n    if (unmountOnBlur && !isFocused) {\n      return null;\n    }\n    if (lazy && !loaded.includes(route.key) && !isFocused) {\n      return null;\n    }\n    var _descriptor$options2 = descriptor.options,\n      freezeOnBlur = _descriptor$options2.freezeOnBlur,\n      _descriptor$options2$ = _descriptor$options2.header,\n      header = _descriptor$options2$ === void 0 ? function (_ref) {\n        var layout = _ref.layout,\n          options = _ref.options;\n        return React.createElement(Header, _extends({}, options, {\n          layout: layout,\n          title: getHeaderTitle(options, route.name)\n        }));\n      } : _descriptor$options2$,\n      headerShown = _descriptor$options2.headerShown,\n      headerStatusBarHeight = _descriptor$options2.headerStatusBarHeight,\n      headerTransparent = _descriptor$options2.headerTransparent;\n    return React.createElement(MaybeScreen, {\n      key: route.key,\n      style: [StyleSheet.absoluteFill, {\n        zIndex: isFocused ? 0 : -1\n      }],\n      visible: isFocused,\n      enabled: detachInactiveScreens,\n      freezeOnBlur: freezeOnBlur\n    }, React.createElement(BottomTabBarHeightContext.Provider, {\n      value: tabBarHeight\n    }, React.createElement(Screen, {\n      focused: isFocused,\n      route: descriptor.route,\n      navigation: descriptor.navigation,\n      headerShown: headerShown,\n      headerStatusBarHeight: headerStatusBarHeight,\n      headerTransparent: headerTransparent,\n      header: header({\n        layout: dimensions,\n        route: descriptor.route,\n        navigation: descriptor.navigation,\n        options: descriptor.options\n      }),\n      style: sceneContainerStyle\n    }, descriptor.render())));\n  })), React.createElement(BottomTabBarHeightCallbackContext.Provider, {\n    value: setTabBarHeight\n  }, renderTabBar()));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","React","SafeAreaInsetsContext","BottomTabBarHeightCallbackContext","BottomTabBarHeightContext","BottomTabBar","getTabBarHeight","MaybeScreen","MaybeScreenContainer","BottomTabView","props","tabBar","state","navigation","descriptors","safeAreaInsets","detachInactiveScreens","Platform","OS","sceneContainerStyle","focusedRouteKey","routes","index","key","useState","loaded","setLoaded","includes","dimensions","initialMetrics","frame","layout","width","height","insets","style","options","tabBarStyle","tabBarHeight","setTabBarHeight","renderTabBar","Consumer","top","right","bottom","left","enabled","hasTwoStates","styles","container","map","route","descriptor","lazy","unmountOnBlur","isFocused","freezeOnBlur","header","_ref","title","name","headerShown","headerStatusBarHeight","headerTransparent","StyleSheet","absoluteFill","zIndex","visible","Provider","value","focused","render","create","flex","overflow"],"sourceRoot":"../../src","sources":["BottomTabView.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}