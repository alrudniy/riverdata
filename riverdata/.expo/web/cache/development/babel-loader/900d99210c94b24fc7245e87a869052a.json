{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { WebView } from 'react-native-webview';\nimport Slider from '@react-native-community/slider';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RDGaugeGraphScreen = function RDGaugeGraphScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    err = _useState4[0],\n    setErr = _useState4[1];\n  var _useState5 = useState(7),\n    _useState6 = _slicedToArray(_useState5, 2),\n    days = _useState6[0],\n    setDays = _useState6[1];\n  var _route$params = route.params,\n    gaugeId = _route$params.gaugeId,\n    parameterCode = _route$params.parameterCode;\n  useEffect(function () {\n    setIsLoading(true);\n  }, []);\n  useEffect(function () {\n    var url = \"http://waterdata.usgs.gov/nwisweb/graph?agency_cd=USGS&site_no=\" + gaugeId + \"&parm_cd=\" + parameterCode + \"&period=\" + days;\n    setErr('');\n    setIsLoading(true);\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 3000);\n  }, [days]);\n  var onLoad = function onLoad() {\n    setIsLoading(false);\n  };\n  var onError = function onError() {\n    setErr('An error occurred while loading the graph.');\n    setIsLoading(false);\n  };\n  var handleAddDays = function handleAddDays() {\n    if (days < 119) {\n      setDays(days + 1);\n    }\n  };\n  var handleRemoveDays = function handleRemoveDays() {\n    if (days > 7) {\n      setDays(days - 1);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.sliderContainer,\n      children: [_jsx(Icon, {\n        name: \"remove-circle-outline\",\n        size: 25,\n        color: \"#125EA4\",\n        onPress: handleRemoveDays\n      }), _jsx(Slider, {\n        style: styles.slider,\n        minimumValue: 7,\n        maximumValue: 119,\n        step: 1,\n        value: days,\n        onValueChange: function onValueChange(value) {\n          return setDays(value);\n        },\n        minimumTrackTintColor: \"#125EA4\",\n        maximumTrackTintColor: \"rgba(0, 0, 0, 0.2)\",\n        thumbTintColor: \"#125EA4\"\n      }), _jsx(Icon, {\n        name: \"add-circle-outline\",\n        size: 25,\n        color: \"#125EA4\",\n        onPress: handleAddDays\n      }), _jsxs(Text, {\n        style: styles.sliderText,\n        children: [\"Days: \", days]\n      })]\n    }), _jsx(View, {\n      style: styles.graphContainer,\n      children: _jsx(WebView, {\n        source: {\n          uri: \"http://waterdata.usgs.gov/nwisweb/graph?agency_cd=USGS&site_no=\" + gaugeId + \"&parm_cd=\" + parameterCode + \"&period=\" + days\n        },\n        onLoad: onLoad,\n        onError: onError,\n        javaScriptEnabled: true,\n        style: styles.webView\n      })\n    }), isLoading && _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#125EA4\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading Graph\"\n      })]\n    }), err && _jsx(Text, {\n      children: err\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  loadingContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.8)'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#125EA4'\n  },\n  sliderContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F0F0F0',\n    paddingHorizontal: 15,\n    paddingVertical: 2,\n    borderRadius: 10,\n    marginTop: 10,\n    marginBottom: 15,\n    marginHorizontal: 10,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22\n  },\n  slider: {\n    flex: 1,\n    height: 40\n  },\n  graphContainer: {\n    flex: 1,\n    backgroundColor: '#F0F0F0',\n    borderRadius: 10,\n    marginHorizontal: 10,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22\n  },\n  sliderText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginLeft: 10,\n    color: '#125EA4'\n  },\n  webView: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});\nexport default RDGaugeGraphScreen;","map":{"version":3,"names":["React","useState","useEffect","WebView","Slider","Icon","RDGaugeGraphScreen","route","isLoading","setIsLoading","err","setErr","days","setDays","params","gaugeId","parameterCode","url","setTimeout","onLoad","onError","handleAddDays","handleRemoveDays","styles","container","sliderContainer","slider","value","sliderText","graphContainer","uri","webView","loadingContainer","loadingText","StyleSheet","create","flex","backgroundColor","position","left","right","top","bottom","justifyContent","alignItems","marginTop","fontSize","fontWeight","color","flexDirection","paddingHorizontal","paddingVertical","borderRadius","marginBottom","marginHorizontal","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","overflow","marginLeft"],"sources":["C:/Users/subte/RD2/riverdata/riverdata/components/RDGaugeGraph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { WebView } from 'react-native-webview';\r\nimport Slider from '@react-native-community/slider';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nconst RDGaugeGraphScreen = ({ route }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [err, setErr] = useState('');\r\n  const [days, setDays] = useState(7);\r\n  const { gaugeId, parameterCode } = route.params;\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const url = `http://waterdata.usgs.gov/nwisweb/graph?agency_cd=USGS&site_no=${gaugeId}&parm_cd=${parameterCode}&period=${days}`;\r\n    setErr('');\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 3000);\r\n  }, [days]);\r\n\r\n  const onLoad = () => {\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const onError = () => {\r\n    setErr('An error occurred while loading the graph.');\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleAddDays = () => {\r\n    if (days < 119) {\r\n      setDays(days + 1);\r\n    }\r\n  };\r\n\r\n  const handleRemoveDays = () => {\r\n    if (days > 7) {\r\n      setDays(days - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.sliderContainer}>\r\n        <Icon name=\"remove-circle-outline\" size={25} color='#125EA4' onPress={handleRemoveDays} />\r\n        <Slider\r\n          style={styles.slider}\r\n          minimumValue={7}\r\n          maximumValue={119}\r\n          step={1}\r\n          value={days}\r\n          onValueChange={(value) => setDays(value)}\r\n          minimumTrackTintColor=\"#125EA4\"\r\n          maximumTrackTintColor=\"rgba(0, 0, 0, 0.2)\"\r\n          thumbTintColor=\"#125EA4\"\r\n        />\r\n        <Icon name=\"add-circle-outline\" size={25} color='#125EA4' onPress={handleAddDays} />\r\n        <Text style={styles.sliderText}>Days: {days}</Text>\r\n      </View>\r\n      <View style={styles.graphContainer}>\r\n        <WebView\r\n          source={{ uri: `http://waterdata.usgs.gov/nwisweb/graph?agency_cd=USGS&site_no=${gaugeId}&parm_cd=${parameterCode}&period=${days}` }}\r\n          onLoad={onLoad}\r\n          onError={onError}\r\n          javaScriptEnabled={true}\r\n          style={styles.webView}\r\n        />\r\n      </View>\r\n      {isLoading && (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#125EA4\" />\r\n          <Text style={styles.loadingText}>Loading Graph</Text>\r\n        </View>\r\n      )}\r\n      {err && <Text>{err}</Text>}\r\n    </View>\r\n  );  \r\n      };  \r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#125EA4',\r\n  },\r\n  sliderContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#F0F0F0',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 2,\r\n    borderRadius: 10,\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n    marginHorizontal: 10,\r\n    elevation: 3,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.22,\r\n    shadowRadius: 2.22,\r\n  },  \r\n  slider: {\r\n    flex: 1,\r\n    height: 40,\r\n  },\r\n  graphContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#F0F0F0',\r\n    borderRadius: 10,\r\n    marginHorizontal: 10,\r\n    overflow: 'hidden',\r\n    elevation: 3,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.22,\r\n    shadowRadius: 2.22,\r\n  },\r\n  sliderText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n    color: '#125EA4',\r\n  },  \r\n  webView: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n});\r\n\r\nexport default RDGaugeGraphScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}