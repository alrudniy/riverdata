{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport * as React from 'react';\nimport SceneView from \"../SceneView\";\nvar SwitchView = function (_React$Component) {\n  _inherits(SwitchView, _React$Component);\n  var _super = _createSuper(SwitchView);\n  function SwitchView() {\n    _classCallCheck(this, SwitchView);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SwitchView, [{\n    key: \"render\",\n    value: function render() {\n      var state = this.props.navigation.state;\n      var activeKey = state.routes[state.index].key;\n      var descriptor = this.props.descriptors[activeKey];\n      var ChildComponent = descriptor.getComponent();\n      return React.createElement(SceneView, {\n        component: ChildComponent,\n        navigation: descriptor.navigation,\n        screenProps: this.props.screenProps\n      });\n    }\n  }]);\n  return SwitchView;\n}(React.Component);\nexport { SwitchView as default };","map":{"version":3,"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP;AAAA,IAEqBC,UAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACbC,kBAAS;MACP,IAAQC,QAAU,KAAKC,KAAL,CAAWC,UAA7B,CAAQF;MACR,IAAMG,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaJ,KAAK,CAACK,KAAnB,EAA0BC,GAA5C;MACA,IAAMC,UAAU,GAAG,KAAKN,KAAL,CAAWO,WAAX,CAAuBL,SAAvB,CAAnB;MACA,IAAMM,cAAc,GAAGF,UAAU,CAACG,YAAX,EAAvB;MAEA,OACEd,oBAACC,SAAD;QACEc,SAAS,EAAEF,cADb;QAEEP,UAAU,EAAEK,UAAU,CAACL,UAFzB;QAGEU,WAAW,EAAE,KAAKX,KAAL,CAAWW;MAH1B,EADF;IAOD;EAAA;EAAA;AAAA,EAdqChB,KAAK,CAACiB,SAA/B;AAAA,SAAMf,UAAN","names":["React","SceneView","SwitchView","render","state","props","navigation","activeKey","routes","index","key","descriptor","descriptors","ChildComponent","getComponent","component","screenProps","Component"],"sources":["SwitchView.js"],"sourcesContent":["import * as React from 'react';\nimport SceneView from '../SceneView';\n\nexport default class SwitchView extends React.Component {\n  render() {\n    const { state } = this.props.navigation;\n    const activeKey = state.routes[state.index].key;\n    const descriptor = this.props.descriptors[activeKey];\n    const ChildComponent = descriptor.getComponent();\n\n    return (\n      <SceneView\n        component={ChildComponent}\n        navigation={descriptor.navigation}\n        screenProps={this.props.screenProps}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}