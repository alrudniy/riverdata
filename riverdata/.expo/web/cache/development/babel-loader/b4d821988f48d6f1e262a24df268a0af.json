{"ast":null,"code":"\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar RDStatesScreen = function RDStatesScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Text, {\n      children: [_jsxs(Text, {\n        children: [\"River Data State Selection\", \"\\n\", \"\\n\"]\n      }), _jsx(Text, {\n        children: \"This is a placeholder screen where we want to list out all the static states supported by RiverData. Click the button below to navigate to the sites page for a state. Here will will hard code the state in the code. This page should use a scrollable list view.\"\n      })]\n    }), _jsx(Button, {\n      title: \"Go to state sites\",\n      onPress: function onPress() {\n        return navigation.navigate('State Sites', {\n          name: 'NJ'\n        });\n      }\n    })]\n  });\n  var data = [{\n    id: 1,\n    name: 'Item 1'\n  }, {\n    id: 2,\n    name: 'Item 2'\n  }, {\n    id: 3,\n    name: 'Item 3'\n  }, {\n    id: 4,\n    name: 'Item 4'\n  }, {\n    id: 5,\n    name: 'Item 5'\n  }, {\n    id: 6,\n    name: 'Item 6'\n  }, {\n    id: 7,\n    name: 'Item 7'\n  }, {\n    id: 8,\n    name: 'Item 8'\n  }, {\n    id: 9,\n    name: 'Item 9'\n  }, {\n    id: 10,\n    name: 'Item 10'\n  }];\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return console.log(\"Clicked \" + item.name);\n      },\n      children: _jsx(View, {\n        style: {\n          padding: 16\n        },\n        children: _jsx(Text, {\n          children: item.name\n        })\n      })\n    });\n  };\n  var ScrollableClickableList = function ScrollableClickableList() {\n    return _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderItem\n    });\n  };\n};\nexport default ScrollableClickableList;","map":{"version":3,"names":["React","Component","NavigationContainer","createNativeStackNavigator","RDStatesScreen","navigation","navigate","name","data","id","renderItem","item","console","log","padding","ScrollableClickableList","toString"],"sources":["C:/Users/subte/RDspring23/riverdata/riverdata/components/RDStates.js"],"sourcesContent":["// RDStates.js\r\nimport React, { Component } from 'react';\r\nimport { Button, View, Text, StyleSheet } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { FlatList, TouchableOpacity } from 'react-native';\r\n\r\nconst RDStatesScreen = ({ navigation }) => {\r\n  return (\r\n    <>\r\n      <Text>\r\n        <Text>\r\n          River Data State Selection\r\n          {\"\\n\"}\r\n          {\"\\n\"}\r\n        </Text>\r\n        <Text>This is a placeholder screen where we want to list out all the static states supported by RiverData.\r\n\r\n        Click the button below to navigate to the sites page for a state. Here will will hard code the state in the code. This page should use a scrollable list view.\r\n        </Text>\r\n      </Text>\r\n      \r\n      <Button\r\n        title=\"Go to state sites\"\r\n        onPress={() =>\r\n          navigation.navigate('State Sites', { name: 'NJ' })\r\n        }\r\n      />\r\n    </>\r\n\r\n  );\r\n  const data = [\r\n    { id: 1, name: 'Item 1' },\r\n    { id: 2, name: 'Item 2' },\r\n    { id: 3, name: 'Item 3' },\r\n    { id: 4, name: 'Item 4' },\r\n    { id: 5, name: 'Item 5' },\r\n    { id: 6, name: 'Item 6' },\r\n    { id: 7, name: 'Item 7' },\r\n    { id: 8, name: 'Item 8' },\r\n    { id: 9, name: 'Item 9' },\r\n    { id: 10, name: 'Item 10' },\r\n  ];\r\n\r\n  const renderItem = ({ item }) => (\r\n    <TouchableOpacity onPress={() => console.log(`Clicked ${item.name}`)}>\r\n      <View style={{ padding: 16 }}>\r\n        <Text>{item.name}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  \r\n  const ScrollableClickableList = () => {\r\n    return (\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={renderItem}\r\n      />\r\n    );\r\n  };\r\n  \r\n};\r\n\r\n\r\nexport default ScrollableClickableList;\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAEzC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC;AAAA;AAAA;AAAA;AAAA;AAG5E,IAAMC,cAAc,GAAG,SAAjBA,cAAc,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAClC,OACE;IAAA,WACE,MAAC,IAAI;MAAA,WACH,MAAC,IAAI;QAAA,yCAEF,IAAI,EACJ,IAAI;MAAA,EACA,EACP,KAAC,IAAI;QAAA;MAAA,EAGE;IAAA,EACF,EAEP,KAAC,MAAM;MACL,KAAK,EAAC,mBAAmB;MACzB,OAAO,EAAE;QAAA,OACPA,UAAU,CAACC,QAAQ,CAAC,aAAa,EAAE;UAAEC,IAAI,EAAE;QAAK,CAAC,CAAC;MAAA;IACnD,EACD;EAAA,EACD;EAGL,IAAMC,IAAI,GAAG,CACX;IAAEC,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE;EAAS,CAAC,EACzB;IAAEE,EAAE,EAAE,EAAE;IAAEF,IAAI,EAAE;EAAU,CAAC,CAC5B;EAED,IAAMG,UAAU,GAAG,SAAbA,UAAU;IAAA,IAAMC,IAAI,SAAJA,IAAI;IAAA,OACxB,KAAC,gBAAgB;MAAC,OAAO,EAAE;QAAA,OAAMC,OAAO,CAACC,GAAG,cAAYF,IAAI,CAACJ,IAAI,CAAG;MAAA,CAAC;MAAA,UACnE,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEO,OAAO,EAAE;QAAG,CAAE;QAAA,UAC3B,KAAC,IAAI;UAAA,UAAEH,IAAI,CAACJ;QAAI;MAAQ;IACnB,EACU;EAAA,CACpB;EAED,IAAMQ,uBAAuB,GAAG,SAA1BA,uBAAuB,GAAS;IACpC,OACE,KAAC,QAAQ;MACP,IAAI,EAAEP,IAAK;MACX,YAAY,EAAE,sBAACG,IAAI;QAAA,OAAKA,IAAI,CAACF,EAAE,CAACO,QAAQ,EAAE;MAAA,CAAC;MAC3C,UAAU,EAAEN;IAAW,EACvB;EAEN,CAAC;AAEH,CAAC;AAGD,eAAeK,uBAAuB"},"metadata":{},"sourceType":"module"}