{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ColorPropType, ViewPropTypes } from 'deprecated-react-native-prop-types';\nimport decorateMapComponent, { USES_DEFAULT_IMPLEMENTATION, SUPPORTED } from \"./decorateMapComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  coordinates: PropTypes.arrayOf(PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired\n  })),\n  onPress: PropTypes.func,\n  tappable: PropTypes.bool,\n  fillColor: ColorPropType,\n  strokeWidth: PropTypes.number,\n  strokeColor: ColorPropType,\n  strokeColors: PropTypes.arrayOf(ColorPropType),\n  zIndex: PropTypes.number,\n  lineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n  lineJoin: PropTypes.oneOf(['miter', 'round', 'bevel']),\n  miterLimit: PropTypes.number,\n  geodesic: PropTypes.bool,\n  lineDashPhase: PropTypes.number,\n  lineDashPattern: PropTypes.arrayOf(PropTypes.number)\n});\nvar defaultProps = {\n  strokeColor: '#000',\n  strokeWidth: 1,\n  lineJoin: 'round',\n  lineCap: 'round'\n};\nvar MapPolyline = function (_React$Component) {\n  _inherits(MapPolyline, _React$Component);\n  var _super = _createSuper(MapPolyline);\n  function MapPolyline() {\n    _classCallCheck(this, MapPolyline);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MapPolyline, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.polyline.setNativeProps(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var AIRMapPolyline = this.getAirComponent();\n      return _jsx(AIRMapPolyline, _objectSpread(_objectSpread({}, this.props), {}, {\n        ref: function ref(_ref) {\n          _this.polyline = _ref;\n        }\n      }));\n    }\n  }]);\n  return MapPolyline;\n}(React.Component);\nMapPolyline.propTypes = propTypes;\nMapPolyline.defaultProps = defaultProps;\nexport default decorateMapComponent(MapPolyline, {\n  componentType: 'Polyline',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});","map":{"version":3,"names":["PropTypes","React","ColorPropType","ViewPropTypes","decorateMapComponent","USES_DEFAULT_IMPLEMENTATION","SUPPORTED","propTypes","coordinates","arrayOf","shape","latitude","number","isRequired","longitude","onPress","func","tappable","bool","fillColor","strokeWidth","strokeColor","strokeColors","zIndex","lineCap","oneOf","lineJoin","miterLimit","geodesic","lineDashPhase","lineDashPattern","defaultProps","MapPolyline","props","polyline","setNativeProps","AIRMapPolyline","getAirComponent","ref","Component","componentType","providers","google","ios","android"],"sources":["C:/Users/subte/RD2/riverdata/riverdata/node_modules/react-native-maps/src/MapPolyline.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ColorPropType,\n  ViewPropTypes,\n} from 'deprecated-react-native-prop-types';\nimport decorateMapComponent, {\n  USES_DEFAULT_IMPLEMENTATION,\n  SUPPORTED,\n} from './decorateMapComponent';\n\nconst propTypes = {\n  ...ViewPropTypes,\n\n  /**\n   * An array of coordinates to describe the polygon\n   */\n  coordinates: PropTypes.arrayOf(\n    PropTypes.shape({\n      /**\n       * Latitude/Longitude coordinates\n       */\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n    })\n  ),\n\n  /**\n   * Callback that is called when the user presses on the polyline\n   */\n  onPress: PropTypes.func,\n\n  /* Boolean to allow a polyline to be tappable and use the\n   * onPress function\n   */\n  tappable: PropTypes.bool,\n\n  /**\n   * The fill color to use for the path.\n   */\n  fillColor: ColorPropType,\n\n  /**\n   * The stroke width to use for the path.\n   */\n  strokeWidth: PropTypes.number,\n\n  /**\n   * The stroke color to use for the path.\n   */\n  strokeColor: ColorPropType,\n\n  /**\n   * The stroke colors to use for the path.\n   */\n  strokeColors: PropTypes.arrayOf(ColorPropType),\n\n  /**\n   * The order in which this tile overlay is drawn with respect to other overlays. An overlay\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\n   * with the same z-index is arbitrary. The default zIndex is 0.\n   *\n   * @platform android\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * The line cap style to apply to the open ends of the path.\n   * The default style is `round`.\n   *\n   * @platform ios\n   */\n  lineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n\n  /**\n   * The line join style to apply to corners of the path.\n   * The default style is `round`.\n   *\n   * @platform ios\n   */\n  lineJoin: PropTypes.oneOf(['miter', 'round', 'bevel']),\n\n  /**\n   * The limiting value that helps avoid spikes at junctions between connected line segments.\n   * The miter limit helps you avoid spikes in paths that use the `miter` `lineJoin` style. If\n   * the ratio of the miter length—that is, the diagonal length of the miter join—to the line\n   * thickness exceeds the miter limit, the joint is converted to a bevel join. The default\n   * miter limit is 10, which results in the conversion of miters whose angle at the joint\n   * is less than 11 degrees.\n   *\n   * @platform ios\n   */\n  miterLimit: PropTypes.number,\n\n  /**\n   * Boolean to indicate whether to draw each segment of the line as a geodesic as opposed to\n   * straight lines on the Mercator projection. A geodesic is the shortest path between two\n   * points on the Earth's surface. The geodesic curve is constructed assuming the Earth is\n   * a sphere.\n   *\n   */\n  geodesic: PropTypes.bool,\n\n  /**\n   * The offset (in points) at which to start drawing the dash pattern.\n   *\n   * Use this property to start drawing a dashed line partway through a segment or gap. For\n   * example, a phase value of 6 for the patter 5-2-3-2 would cause drawing to begin in the\n   * middle of the first gap.\n   *\n   * The default value of this property is 0.\n   *\n   * @platform ios\n   */\n  lineDashPhase: PropTypes.number,\n\n  /**\n   * An array of numbers specifying the dash pattern to use for the path.\n   *\n   * The array contains one or more numbers that indicate the lengths (measured in points) of the\n   * line segments and gaps in the pattern. The values in the array alternate, starting with the\n   * first line segment length, followed by the first gap length, followed by the second line\n   * segment length, and so on.\n   *\n   * This property is set to `null` by default, which indicates no line dash pattern.\n   *\n   * @platform ios\n   */\n  lineDashPattern: PropTypes.arrayOf(PropTypes.number),\n};\n\nconst defaultProps = {\n  strokeColor: '#000',\n  strokeWidth: 1,\n  lineJoin: 'round',\n  lineCap: 'round',\n};\n\nclass MapPolyline extends React.Component {\n  setNativeProps(props) {\n    this.polyline.setNativeProps(props);\n  }\n\n  render() {\n    const AIRMapPolyline = this.getAirComponent();\n    return (\n      <AIRMapPolyline\n        {...this.props}\n        ref={(ref) => {\n          this.polyline = ref;\n        }}\n      />\n    );\n  }\n}\n\nMapPolyline.propTypes = propTypes;\nMapPolyline.defaultProps = defaultProps;\n\nexport default decorateMapComponent(MapPolyline, {\n  componentType: 'Polyline',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,EACbC,aAAa,QACR,oCAAoC;AAC3C,OAAOC,oBAAoB,IACzBC,2BAA2B,EAC3BC,SAAS;AACqB;AAEhC,IAAMC,SAAS,mCACVJ,aAAa;EAKhBK,WAAW,EAAER,SAAS,CAACS,OAAO,CAC5BT,SAAS,CAACU,KAAK,CAAC;IAIdC,QAAQ,EAAEX,SAAS,CAACY,MAAM,CAACC,UAAU;IACrCC,SAAS,EAAEd,SAAS,CAACY,MAAM,CAACC;EAC9B,CAAC,CAAC,CACH;EAKDE,OAAO,EAAEf,SAAS,CAACgB,IAAI;EAKvBC,QAAQ,EAAEjB,SAAS,CAACkB,IAAI;EAKxBC,SAAS,EAAEjB,aAAa;EAKxBkB,WAAW,EAAEpB,SAAS,CAACY,MAAM;EAK7BS,WAAW,EAAEnB,aAAa;EAK1BoB,YAAY,EAAEtB,SAAS,CAACS,OAAO,CAACP,aAAa,CAAC;EAS9CqB,MAAM,EAAEvB,SAAS,CAACY,MAAM;EAQxBY,OAAO,EAAExB,SAAS,CAACyB,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;EAQrDC,QAAQ,EAAE1B,SAAS,CAACyB,KAAK,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;EAYtDE,UAAU,EAAE3B,SAAS,CAACY,MAAM;EAS5BgB,QAAQ,EAAE5B,SAAS,CAACkB,IAAI;EAaxBW,aAAa,EAAE7B,SAAS,CAACY,MAAM;EAc/BkB,eAAe,EAAE9B,SAAS,CAACS,OAAO,CAACT,SAAS,CAACY,MAAM;AAAC,EACrD;AAED,IAAMmB,YAAY,GAAG;EACnBV,WAAW,EAAE,MAAM;EACnBD,WAAW,EAAE,CAAC;EACdM,QAAQ,EAAE,OAAO;EACjBF,OAAO,EAAE;AACX,CAAC;AAAC,IAEIQ,WAAW;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACf,wBAAeC,KAAK,EAAE;MACpB,IAAI,CAACC,QAAQ,CAACC,cAAc,CAACF,KAAK,CAAC;IACrC;EAAC;IAAA;IAAA,OAED,kBAAS;MAAA;MACP,IAAMG,cAAc,GAAG,IAAI,CAACC,eAAe,EAAE;MAC7C,OACE,KAAC,cAAc,kCACT,IAAI,CAACJ,KAAK;QACd,GAAG,EAAE,aAACK,IAAG,EAAK;UACZ,KAAI,CAACJ,QAAQ,GAAGI,IAAG;QACrB;MAAE,GACF;IAEN;EAAC;EAAA;AAAA,EAfuBrC,KAAK,CAACsC,SAAS;AAkBzCP,WAAW,CAACzB,SAAS,GAAGA,SAAS;AACjCyB,WAAW,CAACD,YAAY,GAAGA,YAAY;AAEvC,eAAe3B,oBAAoB,CAAC4B,WAAW,EAAE;EAC/CQ,aAAa,EAAE,UAAU;EACzBC,SAAS,EAAE;IACTC,MAAM,EAAE;MACNC,GAAG,EAAErC,SAAS;MACdsC,OAAO,EAAEvC;IACX;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}