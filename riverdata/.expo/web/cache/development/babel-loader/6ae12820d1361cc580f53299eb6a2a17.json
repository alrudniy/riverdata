{"ast":null,"code":"\n\nexport default function getEventManager(target) {\n  var listeners = {};\n\n  var removeListener = function removeListener(type, callback) {\n    var callbacks = listeners[type] ? listeners[type][target] : undefined;\n    if (!callbacks) {\n      return;\n    }\n    var index = callbacks.indexOf(callback);\n    callbacks.splice(index, 1);\n  };\n\n  var addListener = function addListener(type, callback) {\n    listeners[type] = listeners[type] || {};\n    listeners[type][target] = listeners[type][target] || [];\n    listeners[type][target].push(callback);\n    return {\n      remove: function remove() {\n        return removeListener(type, callback);\n      }\n    };\n  };\n  return {\n    addListener: addListener,\n    emit: function emit(type, data) {\n      var items = listeners[type] || {};\n\n      var callbacks = items[target] && items[target].slice();\n      callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(function (cb) {\n        return cb(data);\n      });\n    }\n  };\n}","map":{"version":3,"mappings":";;AAKA,eAAe,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;EAI9C,IAAMC,SAAS,GAAG,EAAlB;;EAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,IAAD,EAAOC,QAAP,EAAoB;IACzC,IAAMC,SAAS,GAAGJ,SAAS,CAACE,IAAD,CAAT,GAAkBF,SAAS,CAACE,IAAD,CAAT,CAAgBH,MAAhB,CAAlB,GAA4CM,SAA9D;IAEA,IAAI,CAACD,SAAL,EAAgB;MACd;IACD;IAED,IAAME,KAAK,GAAGF,SAAS,CAACG,OAAV,CAAkBJ,QAAlB,CAAd;IAEAC,SAAS,CAACI,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;EACD,CAVD;;EAgBA,IAAMG,WAAW,GAAG,SAAdA,WAAW,CAAIP,IAAD,EAAOC,QAAP,EAAoB;IACtCH,SAAS,CAACE,IAAD,CAAT,GAAkBF,SAAS,CAACE,IAAD,CAAT,IAAmB,EAArC;IACAF,SAAS,CAACE,IAAD,CAAT,CAAgBH,MAAhB,IAA0BC,SAAS,CAACE,IAAD,CAAT,CAAgBH,MAAhB,KAA2B,EAArD;IACAC,SAAS,CAACE,IAAD,CAAT,CAAgBH,MAAhB,EAAwBW,IAAxB,CAA6BP,QAA7B;IAEA,OAAO;MACLQ,MAAM,EAAE;QAAA,OAAMV,cAAc,CAACC,IAAD,EAAOC,QAAP;MAAA;IADvB,CAAP;EAGD,CARD;EAUA,OAAO;IACLM,WADK,EACLA,WADK;IAOLG,IAAI,EAAE,cAACV,IAAD,EAAOW,IAAP,EAAgB;MACpB,IAAMC,KAAK,GAAGd,SAAS,CAACE,IAAD,CAAT,IAAmB,EAAjC;;MAMA,IAAME,SAAS,GAAGU,KAAK,CAACf,MAAD,CAAL,IAAiBe,KAAK,CAACf,MAAD,CAAL,CAAcgB,KAAd,EAAnC;MAEAX,SAAS,SAAT,aAAS,WAAT,qBAAS,CAAEY,OAAX,CAAoBC,YAAD;QAAA,OAAQA,EAAE,CAACJ,IAAD,CAA7B;MAAA;IACD;EAjBI,CAAP;AAmBD","names":["getEventManager","target","listeners","removeListener","type","callback","callbacks","undefined","index","indexOf","splice","addListener","push","remove","emit","data","items","slice","forEach","cb"],"sources":["getEventManager.js"],"sourcesContent":["// @ts-check\n\n/**\n * @param {string} target\n */\nexport default function getEventManager(target) {\n  /**\n   * @type {Record<string, Record<string, ((e: any) => void)[]>>}\n   */\n  const listeners = {};\n\n  /**\n   * @param {string} type\n   * @param {() => void} callback\n   */\n  const removeListener = (type, callback) => {\n    const callbacks = listeners[type] ? listeners[type][target] : undefined;\n\n    if (!callbacks) {\n      return;\n    }\n\n    const index = callbacks.indexOf(callback);\n\n    callbacks.splice(index, 1);\n  };\n\n  /**\n   * @param {string} type\n   * @param {() => void} callback\n   */\n  const addListener = (type, callback) => {\n    listeners[type] = listeners[type] || {};\n    listeners[type][target] = listeners[type][target] || [];\n    listeners[type][target].push(callback);\n\n    return {\n      remove: () => removeListener(type, callback),\n    };\n  };\n\n  return {\n    addListener,\n\n    /**\n     * @param {string} type\n     * @param {any} [data]\n     */\n    emit: (type, data) => {\n      const items = listeners[type] || {};\n\n      /**\n       * Copy the current list of callbacks in case they are mutated during execution\n       * @type {((data: any) => void)[] | undefined}\n       */\n      const callbacks = items[target] && items[target].slice();\n\n      callbacks?.forEach((cb) => cb(data));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}