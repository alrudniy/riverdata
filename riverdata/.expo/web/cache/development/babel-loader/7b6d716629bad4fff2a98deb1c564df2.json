{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport RDStatesScreen from \"./components/RDStates\";\nimport RDFavoritesTab from \"./components/RDFavoritesTab\";\nimport RDInfoTab from \"./components/RDInfoTab\";\nimport RDStateSitesScreen from \"./components/RDStateSites\";\nimport RDSiteGaugesScreen from \"./components/RDSiteGauges\";\nimport RDGaugeGraphScreen from \"./components/RDGaugeGraph\";\nimport USGSMap from \"./components/USGSMap\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar RDStatesStack = function RDStatesStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"River Data\",\n      component: RDStatesScreen,\n      options: {\n        headerStyle: {\n          backgroundColor: '#fff'\n        },\n        headerTitleStyle: {\n          fontSize: 14\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"State Sites\",\n      component: RDStateSitesScreen,\n      options: {\n        headerStyle: {\n          backgroundColor: '#fff'\n        },\n        headerTitleStyle: {\n          fontSize: 14\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Site Gauges\",\n      component: RDSiteGaugesScreen,\n      options: function options(_ref) {\n        var _route$params$title, _route$params;\n        var route = _ref.route;\n        return {\n          title: (_route$params$title = (_route$params = route.params) == null ? void 0 : _route$params.title) != null ? _route$params$title : '',\n          headerStyle: {\n            backgroundColor: '#fff'\n          },\n          headerTitleStyle: {\n            fontSize: 14\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Gauge Graph\",\n      component: RDGaugeGraphScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Map\",\n      component: USGSMap\n    })]\n  });\n};\nfunction App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFavorited = _useState2[0],\n    setIsFavorited = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    siteName = _useState4[0],\n    setSiteName = _useState4[1];\n  useEffect(function () {\n    setSiteName('');\n  }, []);\n  var iconSize = 26;\n\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref2) {\n        var route = _ref2.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused,\n              color = _ref3.color;\n            var iconName;\n            if (route.name === 'River Data') {\n              iconName = focused ? 'water' : 'water-outline';\n            } else if (route.name === 'Favorites') {\n              iconName = focused ? 'ios-heart' : 'ios-heart-outline';\n            } else if (route.name === 'About River Data') {\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n            } else if (route.name === 'USMap') {\n              iconName = 'map-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: iconSize,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: '#125EA4',\n          tabBarInactiveTintColor: 'gray',\n          tabBarShowLabel: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"River Data\",\n        component: RDStatesStack,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Favorites\",\n        component: RDFavoritesTab,\n        options: {\n          headerTitle: 'Favorites'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"About River Data\",\n        component: RDInfoTab,\n        options: {\n          headerTitle: 'About River Data'\n        }\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","RDStatesScreen","RDFavoritesTab","RDInfoTab","RDStateSitesScreen","RDSiteGaugesScreen","RDGaugeGraphScreen","USGSMap","Stack","Tab","RDStatesStack","headerStyle","backgroundColor","headerTitleStyle","fontSize","route","title","params","App","isFavorited","setIsFavorited","siteName","setSiteName","iconSize","tabBarIcon","focused","color","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarShowLabel","headerShown","headerTitle"],"sources":["C:/Users/subte/RD2/riverdata/riverdata/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport RDStatesScreen from './components/RDStates';\r\nimport RDFavoritesTab from './components/RDFavoritesTab';\r\nimport RDInfoTab from './components/RDInfoTab';\r\nimport RDStateSitesScreen from './components/RDStateSites';\r\nimport RDSiteGaugesScreen from './components/RDSiteGauges';\r\nimport RDGaugeGraphScreen from './components/RDGaugeGraph';\r\nimport USGSMap from './components/USGSMap';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst RDStatesStack = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"River Data\" component={RDStatesScreen} options={{\r\n          headerStyle: {\r\n            backgroundColor: '#fff',\r\n          },\r\n          headerTitleStyle: {\r\n            fontSize: 14,\r\n          },\r\n        }}/>\r\n      <Stack.Screen\r\n        name=\"State Sites\"\r\n        component={RDStateSitesScreen}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: '#fff',\r\n          },\r\n          headerTitleStyle: {\r\n            fontSize: 14,\r\n          },\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Site Gauges\"\r\n        component={RDSiteGaugesScreen}\r\n        options={({ route }) => ({\r\n          title: route.params?.title ?? '',\r\n          headerStyle: {\r\n            backgroundColor: '#fff',\r\n          },\r\n          headerTitleStyle: {\r\n            fontSize: 14,\r\n          },\r\n        })}\r\n      />\r\n      <Stack.Screen name=\"Gauge Graph\" component={RDGaugeGraphScreen} />\r\n      <Stack.Screen name=\"Map\" component={USGSMap} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [isFavorited, setIsFavorited] = useState(false);\r\n  const [siteName, setSiteName] = useState('');\r\n\r\n  useEffect(() => {\r\n    setSiteName('');\r\n  }, []);\r\n\r\n  const iconSize = 26; // Set a fixed size for the icons\r\n\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color }) => {\r\n            let iconName;\r\n            if (route.name === 'River Data') {\r\n              iconName = focused ? 'water' : 'water-outline';\r\n            } else if (route.name === 'Favorites') {\r\n              iconName = focused ? 'ios-heart' : 'ios-heart-outline';\r\n            } else if (route.name === 'About River Data') {\r\n              iconName = focused\r\n                ? 'ios-information-circle'\r\n                : 'ios-information-circle-outline';\r\n            } else if (route.name === 'USMap') {\r\n              iconName = 'map-outline';\r\n            }\r\n\r\n            return <Ionicons name={iconName} size={iconSize} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: '#125EA4',\r\n          tabBarInactiveTintColor: 'gray',\r\n          tabBarShowLabel: false,\r\n        })}\r\n      >\r\n        <Tab.Screen\r\n          name=\"River Data\"\r\n          component={RDStatesStack}\r\n          options={{ headerShown: false}}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Favorites\"\r\n          component={RDFavoritesTab}\r\n          options={{ headerTitle: 'Favorites' }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"About River Data\"\r\n          component={RDInfoTab}\r\n          options={{ headerTitle: 'About River Data' }}\r\n        />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}