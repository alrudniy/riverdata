{"ast":null,"code":"var SphericalMercator = require('@mapbox/sphericalmercator');\n\nvar smCache = {};\nmodule.exports.viewport = viewport;\nmodule.exports.bounds = bounds;\nfunction fetchMerc(tileSize) {\n  tileSize = tileSize || 256;\n  if (!smCache[tileSize]) {\n    smCache[tileSize] = new SphericalMercator({\n      size: tileSize\n    });\n  }\n  return smCache[tileSize];\n}\nfunction getAdjusted(base, ratios, allowFloat) {\n  var adjusted = Math.min(base - Math.log(ratios[0]) / Math.log(2), base - Math.log(ratios[1]) / Math.log(2));\n  return allowFloat ? adjusted : Math.floor(adjusted);\n}\nfunction viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat) {\n  minzoom = minzoom === undefined ? 0 : minzoom;\n  maxzoom = maxzoom === undefined ? 20 : maxzoom;\n  var merc = fetchMerc(tileSize);\n  var base = maxzoom;\n  var bl = merc.px([bounds[0], bounds[1]], base);\n  var tr = merc.px([bounds[2], bounds[3]], base);\n  var width = tr[0] - bl[0];\n  var height = bl[1] - tr[1];\n  var centerPixelX = bl[0] + width / 2;\n  var centerPixelY = tr[1] + height / 2;\n  var ratios = [width / dimensions[0], height / dimensions[1]];\n  var adjusted = getAdjusted(base, ratios, allowFloat);\n  var center = merc.ll([centerPixelX, centerPixelY], base);\n  var zoom = Math.max(minzoom, Math.min(maxzoom, adjusted));\n  return {\n    center: center,\n    zoom: zoom\n  };\n}\nfunction bounds(viewport, zoom, dimensions, tileSize) {\n  if (viewport.lon !== undefined) {\n    viewport = [viewport.lon, viewport.lat];\n  }\n  var merc = fetchMerc(tileSize);\n  var px = merc.px(viewport, zoom);\n  var tl = merc.ll([px[0] - dimensions[0] / 2, px[1] - dimensions[1] / 2], zoom);\n  var br = merc.ll([px[0] + dimensions[0] / 2, px[1] + dimensions[1] / 2], zoom);\n  return [tl[0], br[1], br[0], tl[1]];\n}","map":{"version":3,"names":["SphericalMercator","require","smCache","module","exports","viewport","bounds","fetchMerc","tileSize","size","getAdjusted","base","ratios","allowFloat","adjusted","Math","min","log","floor","dimensions","minzoom","maxzoom","undefined","merc","bl","px","tr","width","height","centerPixelX","centerPixelY","center","ll","zoom","max","lon","lat","tl","br"],"sources":["C:/Users/subte/RD2/riverdata/riverdata/node_modules/react-native-map-clustering/node_modules/@mapbox/geo-viewport/index.js"],"sourcesContent":["var SphericalMercator = require('@mapbox/sphericalmercator');\n\n// The SphericalMercator library only accepts a variable\n// tileSize on instantiation, which it uses to pre-cache\n// calculations by zoom level.\n// We cache each instantiation, keyed by tile size, to avoid\n// repeating this cost when working with a single tile size\n// (assumed to be the most-common use case).\nvar smCache = {};\n\nmodule.exports.viewport = viewport;\nmodule.exports.bounds = bounds;\n\nfunction fetchMerc(tileSize) {\n    tileSize = tileSize || 256;\n\n    if (!smCache[tileSize]) {\n        smCache[tileSize] = new SphericalMercator({ size: tileSize });\n    }\n\n    return smCache[tileSize];\n}\n\nfunction getAdjusted(base, ratios, allowFloat) {\n    var adjusted = Math.min(\n        base - (Math.log(ratios[0]) / Math.log(2)),\n        base - (Math.log(ratios[1]) / Math.log(2)));\n\n    return allowFloat ? adjusted : Math.floor(adjusted);\n}\n\nfunction viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat) {\n    minzoom = (minzoom === undefined) ? 0 : minzoom;\n    maxzoom = (maxzoom === undefined) ? 20 : maxzoom;\n    var merc = fetchMerc(tileSize);\n    var base = maxzoom;\n    var bl = merc.px([bounds[0], bounds[1]], base);\n    var tr = merc.px([bounds[2], bounds[3]], base);\n    var width = tr[0] - bl[0];\n    var height = bl[1] - tr[1];\n    var centerPixelX = bl[0] + (width / 2);\n    var centerPixelY = tr[1] + (height / 2);\n    var ratios = [width / dimensions[0], height / dimensions[1]];\n    var adjusted = getAdjusted(base, ratios, allowFloat);\n\n    var center = merc.ll([centerPixelX, centerPixelY], base);\n    var zoom = Math.max(minzoom, Math.min(maxzoom, adjusted));\n\n    return { center, zoom };\n}\n\nfunction bounds(viewport, zoom, dimensions, tileSize) {\n    if (viewport.lon !== undefined) {\n        viewport = [\n            viewport.lon,\n            viewport.lat\n        ];\n    }\n\n    var merc = fetchMerc(tileSize);\n    var px = merc.px(viewport, zoom);\n    var tl = merc.ll([\n        px[0] - (dimensions[0] / 2),\n        px[1] - (dimensions[1] / 2)\n    ], zoom);\n    var br = merc.ll([\n        px[0] + (dimensions[0] / 2),\n        px[1] + (dimensions[1] / 2)\n    ], zoom);\n    return [tl[0], br[1], br[0], tl[1]];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}